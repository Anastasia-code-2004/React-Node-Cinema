{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naaan\\\\source\\\\253502_Nikolaychik_16_labs\\\\STRWEB\\\\LR4\\\\client\\\\src\\\\components\\\\SessionDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieSessionService from \"../services/MovieSessionService\";\nimport GenreService from \"../services/GenreService\"; // Импортируем GenreService\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SessionDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Получаем ID сеанса из маршрута\n  const [session, setSession] = useState(null);\n  const [genres, setGenres] = useState([]); // Состояние для жанров\n\n  useEffect(() => {\n    // Получаем данные о сеансе\n    MovieSessionService.get(id).then(response => {\n      const sessionData = response.data;\n      setSession(sessionData);\n\n      // Если жанры представлены как ID, загружаем полные данные жанров\n      const genreIds = sessionData.movie.genres;\n      if (genreIds && genreIds.length > 0) {\n        // Загружаем жанры по ID\n        Promise.all(genreIds.map(genreId => GenreService.get(genreId))).then(genreResponses => {\n          const genreNames = genreResponses.map(res => res.data.name); // Извлекаем имена жанров\n          setGenres(genreNames);\n        }).catch(error => {\n          console.error(\"Error fetching genres:\", error);\n        });\n      }\n    }).catch(error => {\n      console.error(\"Error fetching session details:\", error);\n    });\n  }, [id]);\n  if (!session) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u0441\\u0435\\u0430\\u043D\\u0441\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0444\\u0438\\u043B\\u044C\\u043C\\u0430: \", session.movie.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", session.movie.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0414\\u043B\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C: \", session.movie.duration, \" \\u043C\\u0438\\u043D\\u0443\\u0442\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0416\\u0430\\u043D\\u0440\\u044B:\", \" \", genres.length > 0 ? genres.join(\", \") : \"Нет жанров\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: session.movie.posterPath,\n      alt: session.movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(SessionDetails, \"bhL4AqcV1vX/GYn7dhqAsKvh/ik=\", false, function () {\n  return [useParams];\n});\n_c = SessionDetails;\nexport default SessionDetails;\nvar _c;\n$RefreshReg$(_c, \"SessionDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","MovieSessionService","GenreService","jsxDEV","_jsxDEV","SessionDetails","_s","id","session","setSession","genres","setGenres","get","then","response","sessionData","data","genreIds","movie","length","Promise","all","map","genreId","genreResponses","genreNames","res","name","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","duration","join","src","posterPath","alt","_c","$RefreshReg$"],"sources":["C:/Users/naaan/source/253502_Nikolaychik_16_labs/STRWEB/LR4/client/src/components/SessionDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MovieSessionService from \"../services/MovieSessionService\";\r\nimport GenreService from \"../services/GenreService\"; // Импортируем GenreService\r\n\r\nconst SessionDetails = () => {\r\n  const { id } = useParams(); // Получаем ID сеанса из маршрута\r\n  const [session, setSession] = useState(null);\r\n  const [genres, setGenres] = useState([]); // Состояние для жанров\r\n\r\n  useEffect(() => {\r\n    // Получаем данные о сеансе\r\n    MovieSessionService.get(id)\r\n      .then((response) => {\r\n        const sessionData = response.data;\r\n        setSession(sessionData);\r\n\r\n        // Если жанры представлены как ID, загружаем полные данные жанров\r\n        const genreIds = sessionData.movie.genres;\r\n        if (genreIds && genreIds.length > 0) {\r\n          // Загружаем жанры по ID\r\n          Promise.all(genreIds.map((genreId) => GenreService.get(genreId)))\r\n            .then((genreResponses) => {\r\n              const genreNames = genreResponses.map((res) => res.data.name); // Извлекаем имена жанров\r\n              setGenres(genreNames);\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Error fetching genres:\", error);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching session details:\", error);\r\n      });\r\n  }, [id]);\r\n\r\n  if (!session) {\r\n    return <p>Загрузка...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Детали сеанса</h1>\r\n      <p>Название фильма: {session.movie.title}</p>\r\n      <p>Описание: {session.movie.description}</p>\r\n      <p>Длительность: {session.movie.duration} минут</p>\r\n      <p>\r\n        Жанры:{\" \"}\r\n        {genres.length > 0 ? genres.join(\", \") : \"Нет жанров\"}\r\n      </p>\r\n      <img src={session.movie.posterPath} alt={session.movie.title} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SessionDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}