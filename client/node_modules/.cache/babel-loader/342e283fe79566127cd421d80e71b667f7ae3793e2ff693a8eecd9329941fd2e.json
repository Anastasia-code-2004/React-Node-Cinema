{"ast":null,"code":"// src/MovieSessionService.js\nimport axios from \"axios\";\nconst API_URL = \"http://localhost:2000/api/movieSessions\"; // Замените на ваш API URL\n\nclass MovieSessionService {\n  // Получить все сеансы\n  getAll() {\n    return axios.get(API_URL);\n  }\n\n  // Получить сеанс по ID\n  get(id) {\n    return axios.get(`${API_URL}/${id}`);\n  }\n\n  // Создать новый сеанс\n  create(data) {\n    return axios.post(API_URL, data);\n  }\n\n  // Обновить сеанс по ID\n  update(id, data) {\n    return axios.put(`${API_URL}/${id}`, data);\n  }\n\n  // Удалить сеанс по ID\n  delete(id) {\n    return axios.delete(`${API_URL}/${id}`);\n  }\n\n  // Удалить все сеансы\n  deleteAll() {\n    return axios.delete(API_URL);\n  }\n\n  // Поиск сеанса по залу\n  searchByCinemaHall(cinemaHall) {\n    return axios.get(`${API_URL}?cinemaHall=${encodeURIComponent(cinemaHall)}`);\n  }\n  searchByDate(date) {\n    return axios.get(`${API_URL}?date=${encodeURIComponent(date)}`);\n  }\n}\n\n// Создаем экземпляр класса и экспортируем его\nconst movieSessionServiceInstance = new MovieSessionService();\nexport default movieSessionServiceInstance;","map":{"version":3,"names":["axios","API_URL","MovieSessionService","getAll","get","id","create","data","post","update","put","delete","deleteAll","searchByCinemaHall","cinemaHall","encodeURIComponent","searchByDate","date","movieSessionServiceInstance"],"sources":["C:/Users/naaan/source/253502_Nikolaychik_16_labs/STRWEB/LR4/client/src/services/MovieSessionService.js"],"sourcesContent":["// src/MovieSessionService.js\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:2000/api/movieSessions\"; // Замените на ваш API URL\r\n\r\nclass MovieSessionService {\r\n  // Получить все сеансы\r\n  getAll() {\r\n    return axios.get(API_URL);\r\n  }\r\n\r\n  // Получить сеанс по ID\r\n  get(id) {\r\n    return axios.get(`${API_URL}/${id}`);\r\n  }\r\n\r\n  // Создать новый сеанс\r\n  create(data) {\r\n    return axios.post(API_URL, data);\r\n  }\r\n\r\n  // Обновить сеанс по ID\r\n  update(id, data) {\r\n    return axios.put(`${API_URL}/${id}`, data);\r\n  }\r\n\r\n  // Удалить сеанс по ID\r\n  delete(id) {\r\n    return axios.delete(`${API_URL}/${id}`);\r\n  }\r\n\r\n  // Удалить все сеансы\r\n  deleteAll() {\r\n    return axios.delete(API_URL);\r\n  }\r\n\r\n  // Поиск сеанса по залу\r\n  searchByCinemaHall(cinemaHall) {\r\n    return axios.get(`${API_URL}?cinemaHall=${encodeURIComponent(cinemaHall)}`);\r\n  }\r\n\r\n  searchByDate(date) {\r\n    return axios.get(`${API_URL}?date=${encodeURIComponent(date)}`);\r\n  }\r\n}\r\n\r\n// Создаем экземпляр класса и экспортируем его\r\nconst movieSessionServiceInstance = new MovieSessionService();\r\nexport default movieSessionServiceInstance;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,yCAAyC,CAAC,CAAC;;AAE3D,MAAMC,mBAAmB,CAAC;EACxB;EACAC,MAAMA,CAAA,EAAG;IACP,OAAOH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EAC3B;;EAEA;EACAG,GAAGA,CAACC,EAAE,EAAE;IACN,OAAOL,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAII,EAAE,EAAE,CAAC;EACtC;;EAEA;EACAC,MAAMA,CAACC,IAAI,EAAE;IACX,OAAOP,KAAK,CAACQ,IAAI,CAACP,OAAO,EAAEM,IAAI,CAAC;EAClC;;EAEA;EACAE,MAAMA,CAACJ,EAAE,EAAEE,IAAI,EAAE;IACf,OAAOP,KAAK,CAACU,GAAG,CAAC,GAAGT,OAAO,IAAII,EAAE,EAAE,EAAEE,IAAI,CAAC;EAC5C;;EAEA;EACAI,MAAMA,CAACN,EAAE,EAAE;IACT,OAAOL,KAAK,CAACW,MAAM,CAAC,GAAGV,OAAO,IAAII,EAAE,EAAE,CAAC;EACzC;;EAEA;EACAO,SAASA,CAAA,EAAG;IACV,OAAOZ,KAAK,CAACW,MAAM,CAACV,OAAO,CAAC;EAC9B;;EAEA;EACAY,kBAAkBA,CAACC,UAAU,EAAE;IAC7B,OAAOd,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,eAAec,kBAAkB,CAACD,UAAU,CAAC,EAAE,CAAC;EAC7E;EAEAE,YAAYA,CAACC,IAAI,EAAE;IACjB,OAAOjB,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,SAASc,kBAAkB,CAACE,IAAI,CAAC,EAAE,CAAC;EACjE;AACF;;AAEA;AACA,MAAMC,2BAA2B,GAAG,IAAIhB,mBAAmB,CAAC,CAAC;AAC7D,eAAegB,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}