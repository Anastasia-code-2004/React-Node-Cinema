{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naaan\\\\source\\\\253502_Nikolaychik_16_labs\\\\STRWEB\\\\LR4\\\\client\\\\src\\\\components\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MovieService from \"../services/MovieService\"; // Сервис для работы с фильмами\nimport GenreService from \"../services/GenreService\"; // Сервис для работы с жанрами\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [newMovie, setNewMovie] = useState({\n    title: \"\",\n    description: \"\",\n    duration: \"\",\n    posterPath: \"\",\n    genres: []\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  useEffect(() => {\n    retrieveMovies();\n    retrieveGenres();\n  }, []);\n  const retrieveMovies = () => {\n    MovieService.getAll().then(response => {\n      setMovies(response.data);\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n  const retrieveGenres = () => {\n    GenreService.getAll().then(response => {\n      setGenres(response.data);\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n  const handleSearchChange = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    if (term) {\n      MovieService.search(term).then(response => {\n        setMovies(response.data);\n      }).catch(e => {\n        console.error(e);\n      });\n    } else {\n      retrieveMovies();\n    }\n  };\n  const createMovie = () => {\n    if (!newMovie.title.trim() || !newMovie.description.trim() || !newMovie.duration || !newMovie.posterPath || newMovie.genres.length === 0) {\n      alert(\"Пожалуйста, заполните все поля!\");\n      return;\n    }\n    if (isNaN(newMovie.duration) || newMovie.duration <= 0 || !Number.isInteger(Number(newMovie.duration))) {\n      alert(\"Продолжительность должна быть положительным целым числом!\");\n      return;\n    }\n    MovieService.create(newMovie).then(() => {\n      retrieveMovies();\n      setNewMovie({\n        title: \"\",\n        description: \"\",\n        duration: \"\",\n        posterPath: \"\",\n        genres: []\n      });\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n  const updateMovie = id => {\n    if (!selectedMovie.title.trim() || !selectedMovie.description.trim() || !selectedMovie.duration || !selectedMovie.posterPath || selectedMovie.genres.length === 0) {\n      alert(\"Пожалуйста, заполните все поля!\");\n      return;\n    }\n    if (isNaN(selectedMovie.duration) || selectedMovie.duration <= 0 || !Number.isInteger(Number(selectedMovie.duration))) {\n      alert(\"Продолжительность должна быть положительным числом!\");\n      return;\n    }\n    MovieService.update(id, selectedMovie).then(() => {\n      retrieveMovies();\n      setSelectedMovie(null);\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n  const deleteMovie = id => {\n    MovieService.delete(id).then(() => {\n      retrieveMovies();\n    }).catch(e => {\n      console.error(e);\n    });\n  };\n  const formatDateTime = dateString => {\n    const date = new Date(dateString);\n    return {\n      utc: date.toUTCString(),\n      local: date.toLocaleString('ru-RU')\n    };\n  };\n  const sortMovies = movies => {\n    return [...movies].sort((a, b) => {\n      return sortOrder === \"asc\" ? a.duration - b.duration : b.duration - a.duration;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0424\\u0438\\u043B\\u044C\\u043C\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044E\",\n        value: searchTerm,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sort-button\",\n      onClick: () => setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\"),\n      children: [\"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \", sortOrder === \"asc\" ? \"по возрастанию продолжительности\" : \"по убыванию продолжительности\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        value: newMovie.title,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n        value: newMovie.description,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C (\\u043C\\u0438\\u043D)\",\n        value: newMovie.duration,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          duration: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041F\\u0443\\u0442\\u044C \\u043A \\u043F\\u043E\\u0441\\u0442\\u0435\\u0440\\u0443\",\n        value: newMovie.posterPath,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          posterPath: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        value: newMovie.genres,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          genres: Array.from(e.target.selectedOptions, option => option.value)\n        }),\n        children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre.id,\n          children: genre.name\n        }, genre.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: createMovie,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sortMovies(movies).map(movie => {\n        const createdAt = formatDateTime(movie.createdAt);\n        const updatedAt = formatDateTime(movie.updatedAt);\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [selectedMovie && selectedMovie.id === movie.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: selectedMovie.title,\n              onChange: e => setSelectedMovie({\n                ...selectedMovie,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: selectedMovie.description,\n              onChange: e => setSelectedMovie({\n                ...selectedMovie,\n                description: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: selectedMovie.duration,\n              onChange: e => setSelectedMovie({\n                ...selectedMovie,\n                duration: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: selectedMovie.posterPath,\n              onChange: e => setSelectedMovie({\n                ...selectedMovie,\n                posterPath: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              multiple: true,\n              value: selectedMovie.genres.map(genre => genre._id) // Массив ID жанров\n              ,\n              onChange: e => {\n                // Обработка изменения выбора жанров\n                setSelectedMovie({\n                  ...selectedMovie,\n                  genres: Array.from(e.target.selectedOptions, option => option.value)\n                });\n              },\n              children: genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: genre._id,\n                children: [genre.name, \" \"]\n              }, genre._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-button\",\n              onClick: () => updateMovie(movie.id),\n              children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435: \", movie.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", movie.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C: \", movie.duration, \" \\u043C\\u0438\\u043D\\u0443\\u0442\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0416\\u0430\\u043D\\u0440\\u044B: \", movie.genres.map(genre => genre.name).join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435: \", createdAt.utc, \" (UTC), \", createdAt.local, \" (\\u043B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0435\\u0435 \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435: \", updatedAt.utc, \" (UTC), \", updatedAt.local, \" (\\u043B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => setSelectedMovie(movie),\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => deleteMovie(movie.id),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"/n/m3mEqDlcdax2WU8XtrpEg7vE=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","MovieService","GenreService","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","genres","setGenres","selectedMovie","setSelectedMovie","newMovie","setNewMovie","title","description","duration","posterPath","searchTerm","setSearchTerm","sortOrder","setSortOrder","retrieveMovies","retrieveGenres","getAll","then","response","data","catch","e","console","error","handleSearchChange","term","target","value","search","createMovie","trim","length","alert","isNaN","Number","isInteger","create","updateMovie","id","update","deleteMovie","delete","formatDateTime","dateString","date","Date","utc","toUTCString","local","toLocaleString","sortMovies","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","className","onClick","multiple","Array","from","selectedOptions","option","map","genre","name","movie","createdAt","updatedAt","_id","join","_c","$RefreshReg$"],"sources":["C:/Users/naaan/source/253502_Nikolaychik_16_labs/STRWEB/LR4/client/src/components/Movies.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MovieService from \"../services/MovieService\"; // Сервис для работы с фильмами\r\nimport GenreService from \"../services/GenreService\"; // Сервис для работы с жанрами\r\n\r\nconst MovieList = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [newMovie, setNewMovie] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    duration: \"\",\r\n    posterPath: \"\",\r\n    genres: []\r\n  });\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n\r\n  useEffect(() => {\r\n    retrieveMovies();\r\n    retrieveGenres();\r\n  }, []);\r\n\r\n  const retrieveMovies = () => {\r\n    MovieService.getAll()\r\n      .then(response => {\r\n        setMovies(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  const retrieveGenres = () => {\r\n    GenreService.getAll()\r\n      .then(response => {\r\n        setGenres(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    const term = e.target.value;\r\n    setSearchTerm(term);\r\n\r\n    if (term) {\r\n      MovieService.search(term)\r\n        .then(response => {\r\n          setMovies(response.data);\r\n        })\r\n        .catch(e => {\r\n          console.error(e);\r\n        });\r\n    } else {\r\n      retrieveMovies();\r\n    }\r\n  };\r\n\r\n  const createMovie = () => {\r\n    if (!newMovie.title.trim() || !newMovie.description.trim()\r\n        || !newMovie.duration || !newMovie.posterPath || newMovie.genres.length === 0) {\r\n      alert(\"Пожалуйста, заполните все поля!\");\r\n      return;\r\n    }\r\n\r\n    if (isNaN(newMovie.duration) || newMovie.duration <= 0\r\n        || !Number.isInteger(Number(newMovie.duration))) {\r\n      alert(\"Продолжительность должна быть положительным целым числом!\");\r\n      return;\r\n    }\r\n\r\n\r\n    MovieService.create(newMovie)\r\n      .then(() => {\r\n        retrieveMovies();\r\n        setNewMovie({ title: \"\", description: \"\", duration: \"\", posterPath: \"\", genres: [] });\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  const updateMovie = (id) => {\r\n    if (!selectedMovie.title.trim() || !selectedMovie.description.trim()\r\n        || !selectedMovie.duration || !selectedMovie.posterPath\r\n        || selectedMovie.genres.length === 0) {\r\n      alert(\"Пожалуйста, заполните все поля!\");\r\n      return;\r\n    }\r\n\r\n    if (isNaN(selectedMovie.duration) || selectedMovie.duration <= 0 ||\r\n        !Number.isInteger(Number(selectedMovie.duration))) {\r\n      alert(\"Продолжительность должна быть положительным числом!\");\r\n      return;\r\n    }\r\n\r\n    MovieService.update(id, selectedMovie)\r\n      .then(() => {\r\n        retrieveMovies();\r\n        setSelectedMovie(null);\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  const deleteMovie = (id) => {\r\n    MovieService.delete(id)\r\n      .then(() => {\r\n        retrieveMovies();\r\n      })\r\n      .catch(e => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  const formatDateTime = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return {\r\n      utc: date.toUTCString(),\r\n      local: date.toLocaleString('ru-RU')\r\n    };\r\n  };\r\n\r\n  const sortMovies = (movies) => {\r\n    return [...movies].sort((a, b) => {\r\n      return sortOrder === \"asc\" ? a.duration - b.duration : b.duration - a.duration;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Фильмы</h1>\r\n\r\n      {/* Поле для поиска по названию фильма */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Поиск по названию\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n        />\r\n      </div>\r\n\r\n      <button className=\"sort-button\" onClick={() => setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\")}>\r\n        Сортировать {sortOrder === \"asc\" ? \"по возрастанию продолжительности\" : \"по убыванию продолжительности\"}\r\n      </button>\r\n\r\n      {/* Форма для добавления нового фильма */}\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Название\"\r\n          value={newMovie.title}\r\n          onChange={(e) => setNewMovie({ ...newMovie, title: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Описание\"\r\n          value={newMovie.description}\r\n          onChange={(e) => setNewMovie({ ...newMovie, description: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Продолжительность (мин)\"\r\n          value={newMovie.duration}\r\n          onChange={(e) => setNewMovie({ ...newMovie, duration: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Путь к постеру\"\r\n          value={newMovie.posterPath}\r\n          onChange={(e) => setNewMovie({ ...newMovie, posterPath: e.target.value })}\r\n        />\r\n        <select\r\n          multiple\r\n          value={newMovie.genres}\r\n          onChange={(e) => setNewMovie({ ...newMovie, genres: Array.from(e.target.selectedOptions, option => option.value) })}\r\n        >\r\n          {genres.map(genre => (\r\n            <option key={genre.id} value={genre.id}>\r\n              {genre.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button className=\"add-button\" onClick={createMovie}>Добавить</button>\r\n      </div>\r\n\r\n      <ul>\r\n        {sortMovies(movies).map((movie) => {\r\n          const createdAt = formatDateTime(movie.createdAt);\r\n          const updatedAt = formatDateTime(movie.updatedAt);\r\n\r\n          return (\r\n            <li key={movie.id}>\r\n              {selectedMovie && selectedMovie.id === movie.id ? (\r\n                  <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={selectedMovie.title}\r\n                        onChange={(e) => setSelectedMovie({...selectedMovie, title: e.target.value})}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={selectedMovie.description}\r\n                        onChange={(e) => setSelectedMovie({...selectedMovie, description: e.target.value})}\r\n                    />\r\n                    <input\r\n                        type=\"number\"\r\n                        value={selectedMovie.duration}\r\n                        onChange={(e) => setSelectedMovie({...selectedMovie, duration: e.target.value})}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={selectedMovie.posterPath}\r\n                        onChange={(e) => setSelectedMovie({...selectedMovie, posterPath: e.target.value})}\r\n                    />\r\n                    <select\r\n                        multiple\r\n                        value={selectedMovie.genres.map((genre) => genre._id)}  // Массив ID жанров\r\n                        onChange={(e) => {\r\n                          // Обработка изменения выбора жанров\r\n                          setSelectedMovie({\r\n                            ...selectedMovie,\r\n                            genres: Array.from(e.target.selectedOptions, (option) => option.value),\r\n                          });\r\n                        }}\r\n                    >\r\n                      {genres.map((genre) => (\r\n                          <option key={genre._id} value={genre._id}>\r\n                            {genre.name} {/* Отображаем имя жанра */}\r\n                          </option>\r\n                      ))}\r\n                    </select>\r\n\r\n                    <button className=\"add-button\" onClick={() => updateMovie(movie.id)}>Сохранить</button>\r\n\r\n                  </div>\r\n              ) : (\r\n                  <div>\r\n                    <p>Название: {movie.title}</p>\r\n                    <p>Описание: {movie.description}</p>\r\n                    <p>Продолжительность: {movie.duration} минут</p>\r\n                    <p>Жанры: {movie.genres.map(genre => genre.name).join(\", \")}</p>\r\n                    <p>Создание: {createdAt.utc} (UTC), {createdAt.local} (локальное)</p>\r\n                    <p>Последнее обновление: {updatedAt.utc} (UTC), {updatedAt.local} (локальное)</p>\r\n                  <button className=\"edit-button\" onClick={() => setSelectedMovie(movie)}>Изменить</button>\r\n                </div>\r\n              )}\r\n              <button className=\"delete-button\" onClick={() => deleteMovie(movie.id)}>Удалить</button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}